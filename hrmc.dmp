##cat hrmc.dmp | cut -d\# -f1 | xxd -p -r > hrmc.exe && ./hrmc.exe ; echo $?
##xxd hrmc.exe
# hrmc.dmp is a compiler for hrmc written in an ascii hexdump of machine code
## DOS Header            field name in docs            notes (UNUSED means windows doesn't care what it is)
4d 5a                    # e_magic                     MZ in ascii
00 00                    # e_cblp                      UNUSED
00 00                    # e_cp                        UNUSED
00 00                    # e_crlc                      UNUSED
00 00                    # e_cparhdr                   UNUSED
00 00                    # e_minalloc                  UNUSED
00 00                    # e_maxalloc                  UNUSED
00 00                    # e_ss                        UNUSED
00 00                    # e_sp                        UNUSED
00 00                    # e_csum                      UNUSED
00 00                    # e_ip                        UNUSED
00 00                    # e_cs                        UNUSED
00 00                    # e_lsarlc                    UNUSED
00 00                    # e_ovno                      UNUSED
00 00 00 00 00 00 00 00  # e_res                       UNUSED
00 00                    # e_oemid                     UNUSED
00 00                    # e_oeminfo                   UNUSED
00 00 00 00 00 00 00 00  # e_res2_0                    UNUSED
00 00 00 00 00 00 00 00  # e_res2_1                    UNUSED
00 00 00 00              # e_res2_2                    UNUSED
40 00 00 00              # e_lfanew                    offset of PE header

## PE Header (0x40)
50 45 00 00              # PE Signature
64 86                    # Machine x86_64
01 00                    # NumberOfSections
00 00 00 00              # TimeDateStamp               UNUSED
00 00 00 00              # PointerToSymbolTable        UNUSED
00 00 00 00              # NumberOfSymbols             UNUSED
F0 00                    # SizeOfOptionalHeader (including data directories)
23 00                    # Characteristics (1=no relocs, 2=executable, 0x20=large addresses)
## Optional Header
0B 02                    # Magic Number for PE32+
00                       # MajorLinkerVersion          UNUSED
00                       # MinorLinkerVersion          UNUSED
00 40 00 00              # SizeOfCode
00 00 00 00              # SizeOfInitializedData       UNUSED
00 00 00 00              # SizeOfUninitializedData     UNUSED
70 01 00 00              # AddressOfEntryPoint
70 01 00 00              # BaseOfCode                  UNUSED
00 00 40 00 00 00 00 00  # ImageBase (0x70)
04 00 00 00              # SectionAlignment
04 00 00 00              # FileAlignment
00 00                    # MajorOperatingSystemVersion UNUSED
00 00                    # MinorOperatingSystemVersion UNUSED
00 00                    # MajorImageVersion           UNUSED
00 00                    # MinorImageVersion           UNUSED
04 00                    # MajorSubsystemVersion
00 00                    # MinorSubsystemVersion       UNUSED
00 00 00 00              # Win32VersionValue           UNUSED
70 41 00 00              # SizeOfImage (0x90)
70 01 00 00              # SizeOfHeaders
00 00 00 00              # CheckSum                    UNUSED
02 00                    # Subsystem (2=GUI,3=CUI,10=EFI app)
00 04                    # DllCharacteristics          UNUSED
00 00 10 00 00 00 00 00  # SizeOfStackReserve          UNUSED
00 10 00 00 00 00 00 00  # SizeOfStackCommit
00 00 00 01 00 00 00 00  # SizeOfHeapReserve
00 10 00 00 00 00 00 00  # SizeOfHeapCommit            UNUSED
00 00 00 00              # LoaderFlags                 UNUSED
10 00 00 00              # NumberOfRvaAndSizes

## Data Directories (0xC8) { u32 Relative Virtual Address; u32 Size; }
00 00 00 00 00 00 00 00  # Export Table Directory
00 00 00 00 00 00 00 00  # Import Table Directory
00 00 00 00 00 00 00 00  # Resource Table Directory
00 00 00 00 00 00 00 00  # Exception Table Directory
00 00 00 00 00 00 00 00  # Certificate Table Directory
00 00 00 00 00 00 00 00  # Base Relocation Table Directory
00 00 00 00 00 00 00 00  # Debug Directory
00 00 00 00 00 00 00 00  # Architecture Directory
00 00 00 00 00 00 00 00  # Global Ptr Directory
00 00 00 00 00 00 00 00  # TLS Table Directory
00 00 00 00 00 00 00 00  # Load Config Table Directory
00 00 00 00 00 00 00 00  # Bound Import Directory
00 00 00 00 00 00 00 00  # IAT Directory
00 00 00 00 00 00 00 00  # Delay Import Descriptor Directory
00 00 00 00 00 00 00 00  # CLR Runtime Header Directory
00 00 00 00 00 00 00 00  # Reserved Directory

## .text Section Header (0x148)
2e 74 65 78 74 00 00 00  # Name
00 40 00 00              # VirtualSize
70 01 00 00              # VirtualAddress
00 40 00 00              # SizeOfRawData # TODO: keep updated with size of exe - 0x170
70 01 00 00              # PointerToRawData
00 00 00 00              # PointerToRelocations        UNUSED
00 00 00 00              # PointerToLinenumbers        UNUSED
00 00                    # NumberOfRelocations         UNUSED
00 00                    # NumberOfLinenumbers
20 00 00 E0              # Characteristics (0x20=code, MSB_2=execute, MSB_4=read, MSB_8=write)

## Entry Point aka hrmc bytecode compiler
48 8d 1d e9 00 00 00 	# lea    rbx,[rip+0xe9]        # 0x400260     #  400170:
48 8d 35 e2 10 00 00 	# lea    rsi,[rip+0x10e2]        # 0x401260   #  400177:
48 8d 3d db 14 00 00 	# lea    rdi,[rip+0x14db]        # 0x401660   #  40017e:
0f b6 0e             	# movzx  ecx,BYTE PTR [rsi]                   #  400185:
0f b6 56 01          	# movzx  edx,BYTE PTR [rsi+0x1]               #  400188:
48 83 c6 02          	# add    rsi,0x2                              #  40018c:
49 89 c8             	# mov    r8,rcx                               #  400190:
49 c1 e0 04          	# shl    r8,0x4                               #  400193:
49 89 d1             	# mov    r9,rdx                               #  400197:
49 c1 e1 04          	# shl    r9,0x4                               #  40019a:
49 89 ca             	# mov    r10,rcx                              #  40019e:
49 81 e2 f0 00 00 00 	# and    r10,0xf0                             #  4001a1:
66 42 0f 6f 04 03    	# movdqa xmm0,XMMWORD PTR [rbx+r8*1]          #  4001a8:
66 0f 7f 07          	# movdqa XMMWORD PTR [rdi],xmm0               #  4001ae:
48 83 c7 10          	# add    rdi,0x10                             #  4001b2:
80 f9 00             	# cmp    cl,0x0                               #  4001b6:
0f 84 a1 14 00 00    	# je     0x401660                             #  4001b9:
49 81 fa d0 00 00 00 	# cmp    r10,0xd0                             #  4001bf:
75 06                	# jne    0x4001ce                             #  4001c6:
44 89 4f f7          	# mov    DWORD PTR [rdi-0x9],r9d              #  4001c8:
eb b7                	# jmp    0x400185                             #  4001cc:
49 81 fa e0 00 00 00 	# cmp    r10,0xe0                             #  4001ce:
75 05                	# jne    0x4001dc                             #  4001d5:
88 57 f7             	# mov    BYTE PTR [rdi-0x9],dl                #  4001d7:
eb a9                	# jmp    0x400185                             #  4001da:
80 f9 bb             	# cmp    cl,0xbb                              #  4001dc:
75 0c                	# jne    0x4001ed                             #  4001df:
4a 8b 04 0b          	# mov    rax,QWORD PTR [rbx+r9*1]             #  4001e1:
48 29 f8             	# sub    rax,rdi                              #  4001e5:
89 47 fc             	# mov    DWORD PTR [rdi-0x4],eax              #  4001e8:
eb 98                	# jmp    0x400185                             #  4001eb:
49 83 fa 50          	# cmp    r10,0x50                             #  4001ed:
75 0b                	# jne    0x4001fe                             #  4001f1:
0f be c2             	# movsx  eax,dl                               #  4001f3:
c1 e0 03             	# shl    eax,0x3                              #  4001f6:
89 47 f7             	# mov    DWORD PTR [rdi-0x9],eax              #  4001f9:
eb 87                	# jmp    0x400185                             #  4001fc:
49 83 fa 70          	# cmp    r10,0x70                             #  4001fe:
75 81                	# jne    0x400185                             #  400202:
80 f9 7e             	# cmp    cl,0x7e                              #  400204:
75 04                	# jne    0x40020d                             #  400207:
4a 89 3c 0b          	# mov    QWORD PTR [rbx+r9*1],rdi             #  400209:
80 f9 7f             	# cmp    cl,0x7f                              #  40020d:
0f 85 6f ff ff ff    	# jne    0x400185                             #  400210:
4c 8d 5e fe          	# lea    r11,[rsi-0x2]                        #  400216:
49 89 fc             	# mov    r12,rdi                              #  40021a:
49 89 d5             	# mov    r13,rdx                              #  40021d:
49 83 eb 02          	# sub    r11,0x2                              #  400220:
41 8a 0b             	# mov    cl,BYTE PTR [r11]                    #  400224:
41 8a 53 01          	# mov    dl,BYTE PTR [r11+0x1]                #  400227:
49 83 ec 10          	# sub    r12,0x10                             #  40022b:
4c 39 ea             	# cmp    rdx,r13                              #  40022f:
75 ec                	# jne    0x400220                             #  400232:
80 f9 bf             	# cmp    cl,0xbf                              #  400234:
74 05                	# je     0x40023e                             #  400237:
80 f9 b0             	# cmp    cl,0xb0                              #  400239:
75 0b                	# jne    0x400249                             #  40023c:
48 89 f8             	# mov    rax,rdi                              #  40023e:
4c 29 e0             	# sub    rax,r12                              #  400241:
41 89 44 24 fc       	# mov    DWORD PTR [r12-0x4],eax              #  400244:
80 f9 7e             	# cmp    cl,0x7e                              #  400249:
75 d2                	# jne    0x400220                             #  40024c:
e9 32 ff ff ff       	# jmp    0x400185                             #  40024e:

# 400253
90 0000 0000 0000 0000 0000 0000
# 400260

# hrmc table
0000 0000 0000 0000 0000 0000 0000 0000 # 00
0000 0000 0000 0000 0000 0000 0000 0000 # 01
0000 0000 0000 0000 0000 0000 0000 0000 # 02 get_kernel32
4b00 4500 5200 4e00 4500 4c00 3300 3200 # 03 kernel32 unicode string
2e00 4400 4c00 4c00 0000 0000 0000 0000 # 04 kernel32 unicode string continued
0000 0000 0000 0000 0000 0000 0000 0000 # 05
4765 7453 7464 4861 6e64 6c65 0000 0000 # 06 "GetStdHandle"
0000 0000 0000 0000 0000 0000 0000 0000 # 07
0000 0000 0000 0000 0000 0000 0000 0000 # 08
0000 0000 0000 0000 0000 0000 0000 0000 # 09
0000 0000 0000 0000 0000 0000 0000 0000 # 0A GetProcAddress
0000 0000 0000 0000 0000 0000 0000 0000 # 0B
0000 0000 0000 0000 0000 0000 0000 0000 # 0C strcmp
0000 0000 0000 0000 0000 0000 0000 0000 # 0D
0000 0000 0000 0000 0000 0000 0000 0000 # 0E main
5772 6974 6546 696c 6500 0000 0000 0000 # 0F "WriteFile"
0000 0000 0000 0000 0000 0000 0000 0000 # 10
0000 0000 0000 0000 0000 0000 0000 0000 # 11
0000 0000 0000 0000 0000 0000 0000 0000 # 12
0000 0000 0000 0000 0000 0000 0000 0000 # 13
0000 0000 0000 0000 0000 0000 0000 0000 # 14
0000 0000 0000 0000 0000 0000 0000 0000 # 15
0000 0000 0000 0000 0000 0000 0000 0000 # 16
0000 0000 0000 0000 0000 0000 0000 0000 # 17
0000 0000 0000 0000 0000 0000 0000 0000 # 18
0000 0000 0000 0000 0000 0000 0000 0000 # 19
0000 0000 0000 0000 0000 0000 0000 0000 # 1A
0000 0000 0000 0000 0000 0000 0000 0000 # 1B
0000 0000 0000 0000 0000 0000 0000 0000 # 1C
0000 0000 0000 0000 0000 0000 0000 0000 # 1D
0000 0000 0000 0000 0000 0000 0000 0000 # 1E
0000 0000 0000 0000 0000 0000 0000 0000 # 1F
0000 0000 0000 0000 0000 0000 0000 0000 # 20
0000 0000 0000 0000 0000 0000 0000 0000 # 21
0000 0000 0000 0000 0000 0000 0000 0000 # 22
0000 0000 0000 0000 0000 0000 0000 0000 # 23
0000 0000 0000 0000 0000 0000 0000 0000 # 24
0000 0000 0000 0000 0000 0000 0000 0000 # 25
0000 0000 0000 0000 0000 0000 0000 0000 # 26
0000 0000 0000 0000 0000 0000 0000 0000 # 27
0000 0000 0000 0000 0000 0000 0000 0000 # 28
0000 0000 0000 0000 0000 0000 0000 0000 # 29
0000 0000 0000 0000 0000 0000 0000 0000 # 2A
0000 0000 0000 0000 0000 0000 0000 0000 # 2B
0000 0000 0000 0000 0000 0000 0000 0000 # 2C
0000 0000 0000 0000 0000 0000 0000 0000 # 2D
0000 0000 0000 0000 0000 0000 0000 0000 # 2E
0000 0000 0000 0000 0000 0000 0000 0000 # 2F
0000 0000 0000 0000 0000 0000 0000 0000 # 30
0000 0000 0000 0000 0000 0000 0000 0000 # 31
0000 0000 0000 0000 0000 0000 0000 0000 # 32
0000 0000 0000 0000 0000 0000 0000 0000 # 33
0000 0000 0000 0000 0000 0000 0000 0000 # 34
0000 0000 0000 0000 0000 0000 0000 0000 # 35
0000 0000 0000 0000 0000 0000 0000 0000 # 36
0000 0000 0000 0000 0000 0000 0000 0000 # 37
0000 0000 0000 0000 0000 0000 0000 0000 # 38
0000 0000 0000 0000 0000 0000 0000 0000 # 39
0000 0000 0000 0000 0000 0000 0000 0000 # 3A
0000 0000 0000 0000 0000 0000 0000 0000 # 3B
0000 0000 0000 0000 0000 0000 0000 0000 # 3C
0000 0000 0000 0000 0000 0000 0000 0000 # 3D
0000 0000 0000 0000 0000 0000 0000 0000 # 3E
0000 0000 0000 0000 0000 0000 0000 0000 # 3F
0000 0000 0000 0000 0000 0000 0000 0000 # 40
0000 0000 0000 0000 0000 0000 0000 0000 # 41
0000 0000 0000 0000 0000 0000 0000 0000 # 42
0000 0000 0000 0000 0000 0000 0000 0000 # 43
0000 0000 0000 0000 0000 0000 0000 0000 # 44
0000 0000 0000 0000 0000 0000 0000 0000 # 45
0000 0000 0000 0000 0000 0000 0000 0000 # 46
0000 0000 0000 0000 0000 0000 0000 0000 # 47
0000 0000 0000 0000 0000 0000 0000 0000 # 48
0000 0000 0000 0000 0000 0000 0000 0000 # 49
0000 0000 0000 0000 0000 0000 0000 0000 # 4A
0000 0000 0000 0000 0000 0000 0000 0000 # 4B
0000 0000 0000 0000 0000 0000 0000 0000 # 4C
0000 0000 0000 0000 0000 0000 0000 0000 # 4D
0000 0000 0000 0000 0000 0000 0000 0000 # 4E
0000 0000 0000 0000 0000 0000 0000 0000 # 4F
9090 9058 4803 8510 3254 7648 0fb6 0050 # 50 *+@u8:local
9090 9058 4803 8510 3254 7648 0fbe 0050 # 51 *+@i8:local
5848 d1e0 4803 8510 3254 7648 0fb7 0050 # 52 *+@u16:local
5848 d1e0 4803 8510 3254 7648 0fbf 0050 # 53 *+@i16:local
58c1 e002 4803 8510 3254 768b 0050 9090 # 54 *+@u32:local
58c1 e002 4803 8510 3254 7648 6300 5090 # 55 *+@i32:local
9090 9090 488b 8510 3254 7650 9090 9090 # 56 @local
9090 9090 488d 8510 3254 7650 9090 9090 # 57 &local
58c1 e003 4803 8510 3254 7648 8b00 5090 # 58 *+@u64:local
9090 9058 4889 8510 3254 7690 9090 9090 # 59 =local
9090 9090 488b 8d10 3254 7658 4801 c850 # 5A +local
9090 9090 488b 8d10 3254 7658 4829 c850 # 5B -local
9090 9090 488b 8510 3254 76ff d050 9090 # 5C call local
0000 0000 0000 0000 0000 0000 0000 0000 # 5D
9090 9090 4881 ec10 3254 7690 9090 9090 # 5E reserve stack space
0000 0000 0000 0000 0000 0000 0000 0000 # 5F
5848 0fb6 0050 662e 0f1f 8400 0000 0000 # 60 @u8
5848 0fbe 0050 662e 0f1f 8400 0000 0000 # 61 @i8
5848 0fb7 0050 662e 0f1f 8400 0000 0000 # 62 @u16
5848 0fbf 0050 662e 0f1f 8400 0000 0000 # 63 @i16
588b 0050 6666 2e0f 1f84 0000 0000 0090 # 64 @u32
5848 6300 5066 662e 0f1f 8400 0000 0000 # 65 @i32
0000 0000 0000 0000 0000 0000 0000 0000 # 66
0000 0000 0000 0000 0000 0000 0000 0000 # 67
5848 8b00 5066 662e 0f1f 8400 0000 0000 # 68 @u64
5848 8b00 5066 662e 0f1f 8400 0000 0000 # 69 @i64
0000 0000 0000 0000 0000 0000 0000 0000 # 6A
0000 0000 0000 0000 0000 0000 0000 0000 # 6B
0000 0000 0000 0000 0000 0000 0000 0000 # 6C
0000 0000 0000 0000 0000 0000 0000 0000 # 6D
0000 0000 0000 0000 0000 0000 0000 0000 # 6E
0000 0000 0000 0000 0000 0000 0000 0000 # 6F
0000 0000 0000 0000 0000 0000 0000 0000 # 70
0000 0000 0000 0000 0000 0000 0000 0000 # 71
0000 0000 0000 0000 0000 0000 0000 0000 # 72
0000 0000 0000 0000 0000 0000 0000 0000 # 73
0000 0000 0000 0000 0000 0000 0000 0000 # 74
0000 0000 0000 0000 0000 0000 0000 0000 # 75
0000 0000 0000 0000 0000 0000 0000 0000 # 76
0000 0000 0000 0000 0000 0000 0000 0000 # 77
0000 0000 0000 0000 0000 0000 0000 0000 # 78
0000 0000 0000 0000 0000 0000 0000 0000 # 79
0000 0000 0000 0000 0000 0000 0000 0000 # 7A
0000 0000 0000 0000 0000 0000 0000 0000 # 7B
0000 0000 0000 0000 0000 0000 0000 0000 # 7C
0000 0000 0000 0000 0000 0000 0000 0000 # 7D
08c0 6666 2e0f 1f84 0000 0000 000f 1f00 # 7E {
4809 c066 662e 0f1f 8400 0000 0000 6690 # 7F }
0000 0000 0000 0000 0000 0000 0000 0000 # 80
0000 0000 0000 0000 0000 0000 0000 0000 # 81
0000 0000 0000 0000 0000 0000 0000 0000 # 82
0000 0000 0000 0000 0000 0000 0000 0000 # 83
0000 0000 0000 0000 0000 0000 0000 0000 # 84
0000 0000 0000 0000 0000 0000 0000 0000 # 85
0000 0000 0000 0000 0000 0000 0000 0000 # 86
0000 0000 0000 0000 0000 0000 0000 0000 # 87
0000 0000 0000 0000 0000 0000 0000 0000 # 88
0000 0000 0000 0000 0000 0000 0000 0000 # 89
0000 0000 0000 0000 0000 0000 0000 0000 # 8A
0000 0000 0000 0000 0000 0000 0000 0000 # 8B
0000 0000 0000 0000 0000 0000 0000 0000 # 8C
0000 0000 0000 0000 0000 0000 0000 0000 # 8D
0000 0000 0000 0000 0000 0000 0000 0000 # 8E
0000 0000 0000 0000 0000 0000 0000 0000 # 8F
5888 0066 662e 0f1f 8400 0000 0000 6690 # 90 =u8
5888 0066 662e 0f1f 8400 0000 0000 6690 # 91 =i8
5866 8900 6666 2e0f 1f84 0000 0000 0090 # 92 =u16
5866 8900 6666 2e0f 1f84 0000 0000 0090 # 93 =i16
5889 0066 662e 0f1f 8400 0000 0000 6690 # 94 =u32
5889 0066 662e 0f1f 8400 0000 0000 6690 # 95 =i32
0000 0000 0000 0000 0000 0000 0000 0000 # 96
0000 0000 0000 0000 0000 0000 0000 0000 # 97
5848 8900 6666 2e0f 1f84 0000 0000 0090 # 98 =u64
5848 8900 6666 2e0f 1f84 0000 0000 0090 # 99 =i64
0000 0000 0000 0000 0000 0000 0000 0000 # 9A
0000 0000 0000 0000 0000 0000 0000 0000 # 9B
0000 0000 0000 0000 0000 0000 0000 0000 # 9C
0000 0000 0000 0000 0000 0000 0000 0000 # 9D
0000 0000 0000 0000 0000 0000 0000 0000 # 9E
0000 0000 0000 0000 0000 0000 0000 0000 # 9F
5958 4809 c850 662e 0f1f 8400 0000 0000 # A0 or
5848 f7d0 5066 662e 0f1f 8400 0000 0000 # A1 not
4899 5958 48f7 f150 0f1f 8400 0000 0000 # A2 udiv
5958 48f7 e152 662e 0f1f 8400 0000 0000 # A3 upper umul
5958 48d3 e050 662e 0f1f 8400 0000 0000 # A4 shl
5958 4831 c850 662e 0f1f 8400 0000 0000 # A5 xor
4899 5958 48f7 f152 0f1f 8400 0000 0000 # A6 umod
5958 48d3 e850 662e 0f1f 8400 0000 0000 # A7 shr
5848 f7d8 5066 662e 0f1f 8400 0000 0000 # A8 neg
5958 48d3 f850 662e 0f1f 8400 0000 0000 # A9 sar
5958 4801 c850 662e 0f1f 8400 0000 0000 # AA add
5958 4829 c850 662e 0f1f 8400 0000 0000 # AB sub
4899 5958 48f7 f952 0f1f 8400 0000 0000 # AC mod
4899 5958 48f7 f950 0f1f 8400 0000 0000 # AD div
5958 48f7 e950 662e 0f1f 8400 0000 0000 # AE mul
5958 4821 c850 662e 0f1f 8400 0000 0000 # AF and
9090 9090 9090 5848 85c0 0f84 90f2 ffff # B0 ?
5966 662e 0f1f 8400 0000 0000 0f1f 4000 # B1 pop 1 abi reg
595a 6666 2e0f 1f84 0000 0000 000f 1f00 # B2 pop 2 abi regs
595a 4158 6666 2e0f 1f84 0000 0000 0090 # B3 pop 3 abi regs
595a 4158 4159 4883 ec20 660f 1f44 0000 # B4 pop 4 abi regs; rsp-20 is for shadow space
0000 0000 0000 0000 0000 0000 0000 0000 # B5 unused in windows, used in linux
0000 0000 0000 0000 0000 0000 0000 0000 # B6 unused in windows, used in linux
0000 0000 0000 0000 0000 0000 0000 0000 # B7 unused in windows, used in linux
0000 0000 0000 0000 0000 0000 0000 0000 # B8 unused in windows, used in linux
0000 0000 0000 0000 0000 0000 0000 0000 # B9 adjust for non-syscall abi - unused in windows, used in linux
4883 e4f0 6666 2e0f 1f84 0000 0000 0090 # BA stack must be 16 byte aligned on function entry
9090 9090 9090 9090 9090 90e9 e0f1 ffff # BB backward (continue)
58ff d050 6666 2e0f 1f84 0000 0000 0090 # BC call procedure
5548 89e5 5152 4150 4151 660f 1f44 0000 # BD deploy stack frame
5848 89ec 5dc3 662e 0f1f 8400 0000 0000 # BE return
9090 9090 9090 9090 9090 90e9 a0f1 ffff # BF forward (break)
0000 0000 0000 0000 0000 0000 0000 0000 # C0
5958 4839 c80f 95c0 480f bec0 500f 1f00 # C1 !=
5958 4839 c80f 96c0 480f bec0 500f 1f00 # C2 <=u
5958 4839 c80f 93c0 480f bec0 500f 1f00 # C3 >=u
5958 4839 c80f 9cc0 480f bec0 500f 1f00 # C4 <
0000 0000 0000 0000 0000 0000 0000 0000 # C5
5958 4839 c80f 9ec0 480f bec0 500f 1f00 # C6 <=
5958 4839 c80f 9fc0 480f bec0 500f 1f00 # C7 >
0000 0000 0000 0000 0000 0000 0000 0000 # C8
5958 4839 c80f 9dc0 480f bec0 500f 1f00 # C9 >=
5958 4839 c80f 97c0 480f bec0 500f 1f00 # CA >u
5958 4839 c80f 92c0 480f bec0 500f 1f00 # CB <u
0000 0000 0000 0000 0000 0000 0000 0000 # CC
0000 0000 0000 0000 0000 0000 0000 0000 # CD
5958 4839 c80f 94c0 480f bec0 500f 1f00 # CE ==
0000 0000 0000 0000 0000 0000 0000 0000 # CF
9090 9058 4803 8310 3254 7648 0fb6 0050 # D0 *+@u8:global
9090 9058 4803 8310 3254 7648 0fbe 0050 # D1 *+@i8:global
5848 d1e0 4803 8310 3254 7648 0fb7 0050 # D2 *+@u16:global
5848 d1e0 4803 8310 3254 7648 0fbf 0050 # D3 *+@i16:global
58c1 e002 4803 8310 3254 768b 0050 9090 # D4 *+@u32:global
58c1 e002 4803 8310 3254 7648 6300 5090 # D5 *+@i32:global
9090 9090 488b 8310 3254 7650 9090 9090 # D6 @global
9090 9090 488d 8310 3254 7650 9090 9090 # D7 &global
58c1 e003 4803 8310 3254 7648 8b00 5090 # D8 *+@u64:global
9090 9058 4889 8310 3254 7690 9090 9090 # D9 =global
9090 9090 488b 8b10 3254 7658 4801 c850 # DA +global
9090 9090 488b 8b10 3254 7658 4829 c850 # DB -global
9090 9090 488b 8310 3254 76ff d050 9090 # DC call global
0000 0000 0000 0000 0000 0000 0000 0000 # DD
0000 0000 0000 0000 0000 0000 0000 0000 # DE
0000 0000 0000 0000 0000 0000 0000 0000 # DF
9090 9090 5848 052a 0000 0048 0fb6 0050 # E0 +@u8:imm
9090 9090 5848 052a 0000 0048 0fbe 0050 # E1 +@i8:imm
9090 9090 5848 052a 0000 0048 0fb7 0050 # E2 +@u16:imm
9090 9090 5848 052a 0000 0048 0fbf 0050 # E3 +@i16:imm
9090 9090 5848 052a 0000 008b 0050 9090 # E4 +@u32:imm
9090 9090 5848 052a 0000 0048 6300 5090 # E5 +@i32:imm
9090 9090 9090 6a2a 9090 9090 9090 9090 # E6 load imm
9090 9090 9090 6a2a 5848 89ec 5dc3 9090 # E7 ret imm
9090 9090 5848 052a 0000 0048 8b00 5090 # E8 +@u64:imm
9090 6548 8b04 2560 0000 0050 9090 9090 # E9 GS:imm
9090 9058 4883 c02a 5090 9090 9090 9090 # EA +imm
9090 9058 4883 e82a 5090 9090 9090 9090 # EB -imm
0000 0000 0000 0000 0000 0000 0000 0000 # EC
0000 0000 0000 0000 0000 0000 0000 0000 # EC
0000 0000 0000 0000 0000 0000 0000 0000 # EE
0000 0000 0000 0000 0000 0000 0000 0000 # EF
0000 0000 0000 0000 0000 0000 0000 0000 # F0
0000 0000 0000 0000 0000 0000 0000 0000 # F1
0000 0000 0000 0000 0000 0000 0000 0000 # F2
0000 0000 0000 0000 0000 0000 0000 0000 # F3
0000 0000 0000 0000 0000 0000 0000 0000 # F4
0000 0000 0000 0000 0000 0000 0000 0000 # F5
0000 0000 0000 0000 0000 0000 0000 0000 # F6
0000 0000 0000 0000 0000 0000 0000 0000 # F7
0000 0000 0000 0000 0000 0000 0000 0000 # F8
0000 0000 0000 0000 0000 0000 0000 0000 # F9
0000 0000 0000 0000 0000 0000 0000 0000 # FA
0000 0000 0000 0000 0000 0000 0000 0000 # FB
0000 0000 0000 0000 0000 0000 0000 0000 # FC
0000 0000 0000 0000 0000 0000 0000 0000 # FD
0000 0000 0000 0000 0000 0000 0000 0000 # FE
0000 0000 0000 0000 0000 0000 0000 0000 # FF

## int main()
7E0E BD00 # 0E=&main; setup stack frame
DC02 59FF # D90B # get_kernel32() =$FF
D706 56FF DC0A 59FE # GetProcAddress(kernel32, "GetStdHandle") =$FE
D70F 56FF DC0A 59FD # GetProcAddress(kernel32, "WriteFile") =$FD
E6F5 B100 5CFE 59FC # GetStdHandle(STD_OUTPUT_HANDLE) =$FC
BA00 E600 D701 E60C D706 56FC B400 5CFD # WriteFile(fout,msg,size,&written,0)
BE00 # return

## void* get_kernel32()
7E02 BD00 # 02=&get_kernel32; setup stack frame
E960 E818 E820 D91D # @gs:60 +@u64:18 +@u64:20 =1D
D61D E820 D91B # @1D +@u64:20 =1B
7E71 D61B B071 # @1B ?
     D61D E238 D911 # @1D +@u16:38 =11
     D61D E840 D91A # @1D +@u64:40 =1A
     D611 EB02 D911 # @11 -2 =11
     E616 D912 # 22 =12
     7E72 D612 E600 C900 B072 # @12 0 >= ?
          D61A DA11 6200 D913 # @1A +@11 @u16 =13
          D703 DA12 6200 D914 # &03 +@12 @u16 =14
          7E73 D613 D614 C100 D613 D614 EA20 C100 AF00 B073 # @13 @14 != @13 @14 +20 != & ?
               BF72 # break
          7F73
          D611 EB02 D911 # @11 -2 =11
          D612 EB02 D912 # @12 -2 =12
          BB72 # continue
     7F72
     7E72 D612 E600 C400 B072 # @12 0 < ?
          D61B BE00 # @1B return
     7F72
     D61D 6800 D91D # @1D @u64 =1D
     D61D E820 D91B # @1D +@u64:20 =1B
     BB71 # continue
7F71
E700 # return0

## int strcmp(char* s1 char* s2)
7E0C BD00 # 0C=&strcmp; setup stack frame
7E71 5602 6000 B071 5603 6000 B071 5602 6000 5603 6000 CE00 B071 # $02 @u8 ? $03 @u8 ? $02 @u8 $03 @u8 == ?
     5602 EA01 5902 5603 EA01 5903 # $02 +1 =$02 $03 +1 =$03
     BB71 # continue
7F71
7E71 5602 6000 5603 6000 CE00 B071 # $02 @u8 $03 @u8 == ?
     E700 # return0
7F71
5602 6000 5603 6000 AB00 BE00 # $02 @u8 $03 @u8 - return

## void* GetProcAddress(void* handle char* proc_name)
7E0A BD00 # 0A=&GetProcAddress; setup stack frame
5602 E43C 5A02 D91D # $02 +@u32:3C +$02 =1D
D61D EA18 E470 5A02 D91E # @1D +18 +@u32:70 +$02 =1E
D61E E420 5A02 D91A # @1E +@u32:20 +$02 =1A
E600 D910 # 0 =10
D61E E518 D91F # @1E +@i32:18 =1F
E600 D911 # 0 =11
E600 D91C # 0 =1C
7E71 # do {
     7E72 D61C E600 C700 B072 D611 D910 7F72 # @1C 0 > ? @11 =10
     7E72 D61C E600 C400 B072 D611 D91F 7F72 # @1C 0 < ? @11 =1F
     D61F DA10 E601 A900 D911 # @1F @10 + 1 >> =11
     D611 D41A 5A02 D912 # @11 *+@u32:1A +$02 =12
     D612 5603 DC0C D91C # @12 $03 strcmp =1C
D61C E600 C100 B071 BB71 7F71 # @1C 0 != ? continue }
7E71 D611 D41A 5A02 5603 DC0C E600 C100 B071 E700 7F71 # index *+@u32:1A +$02 $03 strcmp 0 != ? return0
D61E E424 5A02 D907 # @1E +@u32:24 +$02 =17
D61E E41C 5A02 D918 # @1E +@u32:1C +$02 =18
D611 D207 D418 5A02 BE00 # @11 *+@u16:17 *+@u32:18 +$02 return
0000 # end compilation

